const { canva } = window;
/**
 * @public
 * An alias for the DesignSelection interface, providing access to design selection related functionality
 */
export const selection = canva.designInteraction.selection;
/**
 * @public
 * Adds a new page immediately after the currently selected page.
 * @param opts - Configuration for the new page to be added.
 */
export function addPage(opts) {
    return canva.designInteraction.addPage(opts);
}
/**
 * @public
 * Updates the background of the user's current page. The background can be a solid color,
 * an image or a video.
 */
export function setCurrentPageBackground(opts) {
    return canva.designInteraction.setCurrentPageBackground(opts);
}
/**
 * @public
 * Gets the default dimensions that a new page will have when it is added to a design.
 * It is possible for a user to resize a page without resizing the entire design, e.g. by clicking
 * "Expand to Whiteboard". However, there will always be a single set of default dimensions for a
 * design that is applied whenever a new page is created.
 *
 * Returns `undefined` if the design is unbounded (e.g. Whiteboard or Doc).
 */
export function getDefaultPageDimensions() {
    return canva.designInteraction.getDefaultPageDimensions();
}
/**
 * @public
 * Exports the user's design as one or more static files.
 * @param request - The request object containing configurations of the design export.
 */
export function requestExport(request) {
    return canva.export.requestExport(request);
}
/**
 * An alias for the UI interface, providing access to ui related functionality
 * @public
 */
export const ui = canva.dragAndDrop;
/**
 * @public
 * Adds a native element to the user's design.
 * @param element - The element to add to the user's design.
 */
export function addNativeElement(element) {
    return canva.designInteraction.addNativeElement(element);
}
/**
 * Adds an audio track to the user's design.
 * @public
 * @param audioTrack - The audio track to add to the user's design.
 */
export function addAudioTrack(audioTrack) {
    return canva.designInteraction.addAudioTrack(audioTrack);
}
/**
 * Allows to get the context of currently selected page.
 * @public
 * @returns Page context of currently selected page
 */
export function getCurrentPageContext() {
    return canva.designInteraction.getCurrentPageContext();
}
/**
 * @public
 * @param appElementConfig - Configuration for an AppElementClient
 */
export function initAppElement(appElementConfig) {
    return canva.designInteraction.initAppElement(appElementConfig);
}
