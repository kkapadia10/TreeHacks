/** 
 * The click event for a button.
 */
export type TouchOrMouseEvent<T> = React.SyntheticEvent & Partial<Omit<React.MouseEvent<T>, 'nativeEvent'>> & Partial<Omit<React.TouchEvent<T>, 'nativeEvent'>>;
/** 
 * The appearance of a button, indicating its priority.
 */
export type Variant = 'primary' | 'secondary' | 'tertiary';
/** 
 * The props for the `Button` component.
 */
export type ButtonProps = {
    /** 
         * A label that describes what the button does.
         * This must be supplied if the button doesn't have any text content (i.e. an icon-only button).
         */
    ariaLabel?: string;
    /** 
         * A human readable label for the button.
         */
    children?: string;
    /** 
         * If `true`, the user can't interact with the button.
         * @defaultValue false
         */
    disabled?: boolean;
    /** 
         * The icon to render inside the button.
         * This must be one of the icons provided by the App UI Kit.
         */
    icon?: () => JSX.Element;
    /** 
         * The type of button.
         * @defaultValue "button"
         */
    type?: 'submit' | 'button' | 'reset';
    /** 
         * If `true`, the button is rendered in a loading state.
         */
    loading?: boolean;
    /** 
         * A callback that runs when the button is clicked.
         * @param event - The click event for the button.
         */
    onClick?: (event: TouchOrMouseEvent<any>) => void;
    /** 
         * If `true`, the button expands to fill the width of its container.
         * If the button is a child of a `Rows` component, it automatically expands to fill the width of its container and this prop has no effect.
         * @defaultValue false
         */
    stretch?: boolean;
    /** 
         * The appearance of the button, indicating its priority.
         */
    variant: Variant;
};
/** 
 * Triggers an action, such as the submission of a form.
 */
export declare function Button(props: ButtonProps): JSX.Element;
