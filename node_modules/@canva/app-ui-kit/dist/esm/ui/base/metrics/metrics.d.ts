import type { IComputedValue } from 'mobx';
export declare const baseUnit: number;
export declare const enum Breakpoint {
 DEFAULT = 0,
 SMALL = 1,
 MEDIUM = 2,
 LARGE = 3
}
export type MediaQueryBox = IComputedValue<Breakpoint>;
export declare const smallBreakpoint: number;
export declare const mediumBreakpoint: number;
export declare const largeBreakpoint: number;
export declare const breakpointFromScreenWidth: (width: number) => Breakpoint;
export declare const isDefaultViewport: (breakpoint: Breakpoint) => boolean;
export declare const isSmallViewport: (breakpoint: Breakpoint) => boolean;
export declare const isMediumViewport: (breakpoint: Breakpoint) => boolean;
export declare const isLargeViewport: (breakpoint: Breakpoint) => boolean;
export declare const isSmallOrWider: (breakpoint: Breakpoint) => boolean;
export declare const isSmallOrNarrower: (breakpoint: Breakpoint) => boolean;
export declare const isMediumOrWider: (breakpoint: Breakpoint) => boolean;
export declare const isMediumOrNarrower: (breakpoint: Breakpoint) => boolean;
export declare const isLargeOrWider: (breakpoint: Breakpoint) => boolean;
export declare const isLargeOrNarrower: (breakpoint: Breakpoint) => boolean;
export declare const unitSpaces: readonly ["0", "0.5u", "1u", "1.5u", "2u", "3u", "4u", "6u", "8u", "12u"];
export type UnitSpace = (typeof unitSpaces)[number];
export type Space = UnitSpace;
export declare const getSpaceValue: (space: Space) => string;
declare const legacySpaces: readonly ["none", "xxxsmall", "xxsmall", "xsmall", "small", "medium", "large", "xlarge", "xxlarge", "xxxlarge"];
type LegacySpace = (typeof legacySpaces)[number];
export declare const mapToUnitSpace: (legacySpace: LegacySpace) => "0" | "0.5u" | "1u" | "1.5u" | "2u" | "3u" | "4u" | "6u" | "8u" | "12u";
export {};
