import styles from './metrics.css';
export const baseUnit = parseInt(styles.baseUnit, 10) || 8;
export const Breakpoint = {
  DEFAULT: 0,
  SMALL: 1,
  MEDIUM: 2,
  LARGE: 3
};
export const smallBreakpoint = parseInt(styles.smallBreakpoint, 10) || 600;
export const mediumBreakpoint = parseInt(styles.mediumBreakpoint, 10) || 900;
export const largeBreakpoint = parseInt(styles.largeBreakpoint, 10) || 1200;
export const breakpointFromScreenWidth = width => {
  if (width >= largeBreakpoint) {
    return Breakpoint.LARGE;
  } else if (width >= mediumBreakpoint) {
    return Breakpoint.MEDIUM;
  } else if (width >= smallBreakpoint) {
    return Breakpoint.SMALL;
  } else {
    return Breakpoint.DEFAULT;
  }
};
export const isDefaultViewport = breakpoint => breakpoint === Breakpoint.DEFAULT;
export const isSmallViewport = breakpoint => breakpoint === Breakpoint.SMALL;
export const isMediumViewport = breakpoint => breakpoint === Breakpoint.MEDIUM;
export const isLargeViewport = breakpoint => breakpoint === Breakpoint.LARGE;
export const isSmallOrWider = breakpoint => breakpoint >= Breakpoint.SMALL;
export const isSmallOrNarrower = breakpoint => breakpoint <= Breakpoint.SMALL;
export const isMediumOrWider = breakpoint => breakpoint >= Breakpoint.MEDIUM;
export const isMediumOrNarrower = breakpoint => breakpoint <= Breakpoint.MEDIUM;
export const isLargeOrWider = breakpoint => breakpoint >= Breakpoint.LARGE;
export const isLargeOrNarrower = breakpoint => breakpoint <= Breakpoint.LARGE;
export const unitSpaces = ['0', '0.5u', '1u', '1.5u', '2u', '3u', '4u', '6u', '8u', '12u'];
export const getSpaceValue = space => {
  return spaceValues[space];
};
const spaceValues = {
  ['0']: styles.space0,
  ['0.5u']: styles.space050,
  ['1u']: styles.space1,
  ['1.5u']: styles.space150,
  ['2u']: styles.space2,
  ['3u']: styles.space3,
  ['4u']: styles.space4,
  ['6u']: styles.space6,
  ['8u']: styles.space8,
  ['12u']: styles.space12
};
const legacySpaces = ['none', 'xxxsmall', 'xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'xxlarge', 'xxxlarge'];
export const mapToUnitSpace = legacySpace => {
  return spaceMap[legacySpace];
};
const spaceMap = {
  ['none']: '0',
  ['xxxsmall']: '0.5u',
  ['xxsmall']: '1u',
  ['xsmall']: '1.5u',
  ['small']: '2u',
  ['medium']: '3u',
  ['large']: '4u',
  ['xlarge']: '6u',
  ['xxlarge']: '8u',
  ['xxxlarge']: '12u'
};