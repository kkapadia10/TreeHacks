import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from 'react';
import { WithFileSelector } from '../file_selector/file_selector';
import { Dropzone } from './internal/dropzone';
import { useDropzoneContext } from './internal/dropzone_context';
import { DropzoneOverlayInternal } from './internal/dropzone_overlay';
import { FileInputInternal } from './internal/file_input_internal';
import { getValidatedFiles } from './internal/file_validation';
export { DndContext } from './internal/dndcontext';
export { FileInputItem } from './internal/file_input_item';
export const FileInput = (props) => {
    const dropzoneContext = useDropzoneContext();
    const { disabled, accept, onDropAcceptedFiles, onDropRejectedFiles, multiple, mode = 'droparea', } = {
        ...dropzoneContext,
        ...props,
    };
    const selectFile = (files) => {
        const { acceptedFiles, rejectedFiles } = getValidatedFiles(files, multiple, accept);
        acceptedFiles.length > 0 && (onDropAcceptedFiles === null || onDropAcceptedFiles === void 0 ? void 0 : onDropAcceptedFiles(acceptedFiles));
        rejectedFiles.length > 0 && (onDropRejectedFiles === null || onDropRejectedFiles === void 0 ? void 0 : onDropRejectedFiles(rejectedFiles));
    };
    const inputWithSelector = (_jsx(WithFileSelector, { onSelectFiles: selectFile, mimeTypes: accept, multiple: multiple, children: ({ onClick }) => (_jsx(FileInputInternal, { ...props, disabled: !!disabled, accept: accept, multiple: multiple, onClick: onClick })) }));
    return dropzoneContext != null || mode === 'button'
        ? inputWithSelector
        : (_jsx(FileInputDropzone, { disabled: disabled, accept: accept, multiple: multiple, onDropAcceptedFiles: onDropAcceptedFiles, onDropRejectedFiles: onDropRejectedFiles, children: inputWithSelector }));
};
const FileInputDropzone = React.memo(({ children, ...restProps }) => {
    return (_jsxs(Dropzone, { ...restProps, showOverlay: false, children: [children, _jsx(DropzoneOverlayInternal, { variant: "input" })] }));
});
