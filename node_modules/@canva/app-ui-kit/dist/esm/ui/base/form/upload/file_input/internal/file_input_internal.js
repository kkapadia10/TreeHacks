import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import classNames from 'classnames';
import { observer } from 'mobx-react';
import * as React from 'react';
import { pointerInputState } from '../../../../a11y/pointer_input_state/pointer_input_state';
import { Button } from '../../../../button/button';
import { UploadsIcon } from '../../../../icons/uploads/icon';
import { Rows } from '../../../../layout/layout';
import { PixelDensityResponsiveImage } from '../../../../responsive_image/responsive_image';
import { InheritColor, Text } from '../../../../typography/typography';
import styles from './file_input.css';
import { FileInputMessages as Messages } from './file_input.messages';
import { getUploadIllustrations } from './file_input_illustration';
export const FileInputInternal = observer(({ mode = 'droparea', variant = 'compact', multiple, accept, disabled, error, ariaControls, onClick: onClickProp, id, ariaLabelledBy, ariaDescribedBy, stretchButton, }) => {
    const onClick = React.useCallback((e) => {
        if (!disabled) {
            e.stopPropagation();
            onClickProp();
        }
    }, [disabled, onClickProp]);
    const uploadButton = (_jsx(Button, { variant: "secondary", icon: UploadsIcon, onClick: onClick, disabled: disabled, ariaControls: ariaControls, id: id, ariaLabelledBy: ariaLabelledBy, ariaDescribedBy: ariaDescribedBy, 
        stretch: stretchButton && mode === 'button', children: multiple ? Messages.fileSelectorButtonText() : Messages.fileSelectorButtonTextSingleFile() }));
    if (mode === 'button') {
        return uploadButton;
    }
    return (_jsx("div", { className: classNames(styles.dropArea, {
                [styles.error]: error,
                [styles.disabled]: disabled,
                [styles.hoverSupported]: !disabled && pointerInputState.isMouseInput,
            }), 
            onClick: onClick, children: _jsxs(Rows, { spacing: "1u", align: "center", children: [variant === 'display' && (_jsx(PixelDensityResponsiveImage, { sources: getUploadIllustrations(accept), alt: "", className: styles.illustration })), _jsx("span", { className: styles.subText, children: _jsx(Text, { tone: InheritColor, size: "small", tagName: "span", alignment: "center", children: multiple ? Messages.dropAreaText() : Messages.dropAreaTextSingleFile() }) }), uploadButton] }) }));
});
