import * as React from 'react';
import type { Icon } from '../../../../icons/icons';
import type { FileDropProps } from './dropzone';
import { FileCategory } from './file_input_illustration';
type DropzoneOverlayInternalVariant = 'input' | 'surface';
export type AcceptCategoryMap = Partial<Record<FileCategory, string[]>>;
type DropzoneOverlayInternalProps = {
    variant?: DropzoneOverlayInternalVariant
    isOver?: boolean
    icon?: Icon<'large'>
    title?: string
    description?: string
    acceptCategories?: AcceptCategoryMap
} & Pick<FileDropProps, 'multiple'>;
export type DropzoneOverlayProps = Omit<DropzoneOverlayInternalProps, 'variant'>;
export declare const DropzoneOverlayInternal: React.MemoExoticComponent<(props: DropzoneOverlayInternalProps) => import("react/jsx-runtime").JSX.Element>;
declare const FileCategory: ({ category, icon: Icon, fileTypes, }: {
    category: string;
    icon: Icon<"small">;
    fileTypes: string[];
}) => import("react/jsx-runtime").JSX.Element;
export declare const DropzoneOverlay: (props: DropzoneOverlayProps) => import("react/jsx-runtime").JSX.Element;
export {};
