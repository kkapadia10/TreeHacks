import classNames from 'classnames';
import * as React from 'react';
import { alignItemsAtom, backgroundAtom, borderAtom, borderPositionAtom, borderRadiusAtom, flexWrapAtom, getDisplayClassNames, getDisplayStyles, getFlexDirectionClassNames, getFlexDirectionStyles, getPaddingClassNames, getPaddingStyles, heightAtom, justifyContentAtom, minHeightAtom, minWidthAtom, resetAtom, widthAtom, } from './internal/atoms/atoms';
import { commonPropsToDOMProps } from './types';
export const Box = React.forwardRef(function Box(props, ref) {
    const { tagName = 'div', children, className, display, background, border, borderTop, borderBottom, borderStart, borderEnd, borderRadius, padding, paddingX, paddingY, paddingTop, paddingBottom, paddingStart, paddingEnd, width, height, minWidth, minHeight, flexDirection, flexWrap, justifyContent, alignItems, ...rest } = props;
    return React.createElement(tagName, {
        className: classNames(className, resetAtom(true), backgroundAtom(background), borderAtom(border), ...borderPositionAtom({
            top: borderTop,
            bottom: borderBottom,
            start: borderStart,
            end: borderEnd,
        }), borderRadiusAtom(borderRadius), widthAtom(width), heightAtom(height), minWidthAtom(minWidth), minHeightAtom(minHeight), ...getDisplayClassNames(display), ...getPaddingClassNames(padding, paddingX, paddingY, paddingTop, paddingBottom, paddingStart, paddingEnd), ...getFlexDirectionClassNames(flexDirection), flexWrapAtom(flexWrap), justifyContentAtom(justifyContent, display), alignItemsAtom(alignItems, display)),
        style: {
            ...getDisplayStyles(display),
            ...getPaddingStyles(padding, paddingX, paddingY, paddingTop, paddingBottom, paddingStart, paddingEnd),
            ...getFlexDirectionStyles(flexDirection),
        },
        ref,
        ...commonPropsToDOMProps(rest),
    }, children);
});
