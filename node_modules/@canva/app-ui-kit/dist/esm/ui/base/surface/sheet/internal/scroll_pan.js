import * as React from 'react';
import { useStableFunction } from '../../../stable_function/stable_function';
import { pointForIndex } from './snap_points';
export function useScrollPan({ resizeControls, snapPointControls, snapPointIndex, maxPanIndex, isContentScrolled, }) {
    const pan = React.useRef(0);
    const update = useStableFunction((delta) => {
        const points = snapPointControls.get();
        const heights = points.map(point => point.height);
        const current = pointForIndex(points, snapPointIndex).height;
        const maxPan = maxPanIndex != null
            ? Math.max(pointForIndex(points, maxPanIndex).height, current)
            : Math.max(...heights);
        if (maxPan === current && isContentScrolled()) {
            return true;
        }
        pan.current += delta;
        const nextSize = Math.min(maxPan, current + pan.current);
        pan.current = nextSize - current;
        resizeControls.update(pan.current);
        return nextSize >= maxPan;
    });
    const end = useStableFunction(() => {
        resizeControls.end();
        pan.current = 0;
    });
    return {
        panControls: {
            start: resizeControls.start,
            update,
            end,
        },
    };
}
