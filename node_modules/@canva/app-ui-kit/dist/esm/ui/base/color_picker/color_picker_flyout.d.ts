import * as React from 'react';
import type { ButtonProps } from '../button/button';
import type { ColorPickerProps } from './color_picker';
export type StatelessColorPickerFlyoutProps = {
    trigger?: (props: ColorPickerTriggerProps) => React.ReactNode
    open: boolean
    id: string
    ariaLabel?: string
    ariaLabelledBy?: string
    onClick?: () => void
} & ColorPickerProps;
export type ColorPickerFlyoutProps = Omit<StatelessColorPickerFlyoutProps, 'id' | 'open'> & {
    onOpen?: () => void
    onClose?: () => void
};
export type ColorPickerTriggerProps = Pick<ButtonProps, 'ariaLabel' | 'ariaLabelledBy' | 'id' | 'children' | 'active' | 'disclosure' | 'ariaControls' | 'ariaHasPopup' | 'onClick'>;
export declare class ColorPickerFlyoutStore {
    open: boolean;
}
export declare const ColorPickerFlyout: ({ trigger, color, alpha, ariaLabel, ariaLabelledBy, onChange, onChangeStart, onChangeComplete, onStartEyedropper, onOpen, onClose, }: ColorPickerFlyoutProps) => import("react/jsx-runtime").JSX.Element;
export declare function StatelessColorPickerFlyout(props: StatelessColorPickerFlyoutProps): import("react/jsx-runtime").JSX.Element;
