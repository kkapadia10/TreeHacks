const checkableRoles = ['menuitemradio', 'menuitemcheckbox', 'radio', 'switch'];
export function getButtonAriaAttributes(props) {
    const ariaAttrs = {};
    const isButtonRole = (props.role || props.tagName) === 'button';
    if (props.ariaLabelledBy != null) {
        ariaAttrs['aria-labelledby'] = props.ariaLabelledBy;
    }
    else if (props.ariaLabel != null) {
        ariaAttrs['aria-label'] = props.ariaLabel;
    }
    if (props.tabIndex != null) {
        ariaAttrs.tabIndex = props.tabIndex;
    }
    if (props.role != null) {
        ariaAttrs['role'] = props.role;
        if (props.ariaRoleDescription != null) {
            ariaAttrs['aria-roledescription'] = props.ariaRoleDescription;
        }
    }
    if (props.ariaHidden) {
        ariaAttrs['aria-hidden'] = props.ariaHidden;
        ariaAttrs.tabIndex = -1;
    }
    if (props.ariaDescribedBy != null) {
        ariaAttrs['aria-describedby'] = props.ariaDescribedBy;
    }
    if (props.ariaControls != null) {
        ariaAttrs['aria-controls'] = props.ariaControls;
    }
    if (props.ariaOwns != null) {
        ariaAttrs['aria-owns'] = props.ariaOwns;
    }
    if (props.role === 'combobox' && props.ariaActiveDescendant != null) {
        ariaAttrs['aria-activedescendant'] = props.ariaActiveDescendant;
    }
    if (props.disclosure) {
        ariaAttrs['aria-expanded'] = !!props.active;
        if (props.ariaHasPopup != null) {
            ariaAttrs['aria-haspopup'] = props.ariaHasPopup;
        }
        if (ariaAttrs['aria-haspopup'] && !props.role) {
            ariaAttrs['role'] = 'button';
        }
    }
    else if (props.role === 'tab') {
        ariaAttrs['aria-selected'] = !!props.active;
    }
    else if (props.role && checkableRoles.includes(props.role)) {
        ariaAttrs['aria-checked'] = !!props.active;
    }
    else if (isButtonRole && props.active != null) {
        ariaAttrs['aria-pressed'] = props.active;
    }
    if (props.disabled) {
        ariaAttrs['aria-disabled'] = true;
    }
    return ariaAttrs;
}
