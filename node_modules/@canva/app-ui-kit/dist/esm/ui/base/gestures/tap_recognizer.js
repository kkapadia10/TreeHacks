import { getCommonEventProperties } from './recognizer';
export class TapRecognizer {
    constructor(opts) {
        this.opts = opts;
    }
    getBrowserHandledTouchActions() {
        return ['pan-x', 'pan-y', 'pinch-zoom'];
    }
    onPointerDown(pointer, allPointers) {
        var _a;
        if (pointer.start.button != null && pointer.start.button !== 0) {
            return;
        }
        if ((_a = this.opts.disabled) === null || _a === void 0 ? void 0 : _a.get()) {
            return;
        }
        if (allPointers.size === 1) {
            this.state = pointer;
        }
        else {
            this.state = undefined;
        }
    }
    onPointerUp(pointer) {
        var _a, _b;
        if (!this.state) {
            return;
        }
        const start = this.state.start;
        const current = pointer.current;
        const timeDelta = current.timestamp - start.timestamp;
        const distanceSqrd = (current.x - start.x) ** 2 + (current.y - start.y) ** 2;
        if (timeDelta <= 250 && distanceSqrd <= 9 ** 2) {
            (_b = (_a = this.opts).onTap) === null || _b === void 0 ? void 0 : _b.call(_a, getCommonEventProperties(start));
        }
        this.state = undefined;
    }
    onPointerCancel(pointer) {
        this.state = undefined;
    }
}
