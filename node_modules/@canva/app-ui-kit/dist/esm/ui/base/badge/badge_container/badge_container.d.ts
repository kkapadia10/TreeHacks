import * as React from 'react';
export type Location = 'bottom-end' | 'bottom-start' | 'top-end' | 'top-start' | 'center-end' | 'center-start';
export type PaddingStyle = 'standard' | 'compact';
export type Visibility = 'always' | 'on-hover';
export type Transition = 'fade' | 'slide' | 'none';
export declare const BadgeContainer: React.ForwardRefExoticComponent<{
    children?: any;
    paddingStyle?: PaddingStyle | undefined;
    className?: string | undefined;
    ariaLabel?: string | undefined;
    ariaLabelledBy?: string | undefined;
    role?: "group" | undefined;
} & React.RefAttributes<HTMLElement>>;
export type BadgeGroupProps = {
    location: Location | undefined
    visibility?: Visibility;
    transition?: Transition
    stretch?: boolean
};
export declare function BadgeGroup({ location, visibility, transition, children, stretch, }: BadgeGroupProps & {
    children: any;
}): import("react/jsx-runtime").JSX.Element;
export declare const VisibleOnHover: ({ children, transition, showOnTouchDevice, }: {
    children: any;
    transition?: Transition | undefined
    showOnTouchDevice?: boolean | undefined;
}) => import("react/jsx-runtime").JSX.Element;
export declare const SwapOnHover: ({ onHover, children, }: {
    onHover: React.ReactNode;
    children: React.ReactNode;
}) => import("react/jsx-runtime").JSX.Element;
export declare const ExtendedBadgeVisibilityTrigger: React.ForwardRefExoticComponent<{
    children?: React.ReactNode;
    tagName?: "article" | "div" | undefined
    role?: "group" | undefined;
    className?: string | undefined;
    onMouseEnter?: React.MouseEventHandler<Element> | undefined;
    onMouseLeave?: React.MouseEventHandler<Element> | undefined;
    ariaLabelledBy?: string | undefined;
    ariaDescribedBy?: string | undefined;
} & React.RefAttributes<HTMLElement>>;
