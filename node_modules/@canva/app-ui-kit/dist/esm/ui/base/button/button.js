import { jsx as _jsx } from "react/jsx-runtime";
import * as React from 'react';
import { CircleButtonWithLabel, CircleButtonWithoutLabel, renderAnchor, renderButton, renderButtonOrAnchor, } from './internal/internal_button';
export function Button(props) {
    return renderButton(props);
}
export function ButtonLink(props) {
    return renderAnchor(props);
}
export const BasicButton = (props) => renderButtonOrAnchor({ ...props, variant: 'basic' });
export const BasicButtonLink = (props) => renderAnchor({ ...props, variant: 'basic' });
export const CriticalButton = (props) => renderButtonOrAnchor({ ...props, variant: 'critical' });
export const PrimaryButton = (props) => renderButtonOrAnchor({ ...props, variant: 'primary' });
export const SecondaryButton = (props) => renderButtonOrAnchor({ ...props, variant: 'secondary' });
export const TertiaryButton = (props) => renderButtonOrAnchor({ ...props, variant: 'tertiary' });
export const ContrastButton = (props) => renderButtonOrAnchor({ ...props, variant: 'contrast' });
export const LinkButton = (props) => renderButtonOrAnchor({ ...props, variant: 'linkButton' });
export const SubtleLinkButton = (props) => renderButtonOrAnchor({ ...props, variant: 'subtleLinkButton' });
function isCircleButtonWithChildren(props) {
    return typeof props.children !== 'undefined';
}
export const CircleButton = (props) => {
    if (isCircleButtonWithChildren(props)) {
        return _jsx(CircleButtonWithLabel, { ...props });
    }
    return (_jsx(CircleButtonWithoutLabel, { ...props }));
};
export const PrimaryCircleButton = (props) => (_jsx(CircleButton, { ...props, variant: "primary" }));
export const SecondaryCircleButton = (props) => (_jsx(CircleButton, { ...props, variant: "secondary" }));
export const TertiaryCircleButton = (props) => (_jsx(CircleButton, { ...props, variant: "tertiary" }));
export const ContrastCircleButton = (props) => (_jsx(CircleButton, { ...props, variant: "contrast" }));
