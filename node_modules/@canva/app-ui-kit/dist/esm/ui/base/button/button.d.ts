import type { AnchorProps as InternalAnchorProps, BasicVariantOnlyProps, ButtonProps as InternalButtonProps, CircleButtonPropsWithChildren, CircleButtonPropsWithoutChildren, Variant } from './internal/internal_button';
export type { TouchOrMouseEvent, TouchOrMouseEventHandler, } from 'touch_or_mouse_event/touch_or_mouse_event';
export type { IconPosition, Shape as ButtonShape, Size as ButtonSize, Variant as ButtonVariant } from './internal/internal_button';
export type ButtonProps = InternalButtonProps & {
    variant: Variant;
    buttonRef?: never;
    noChildWrapper?: never;
};
export declare function Button(props: ButtonProps): import("react/jsx-runtime").JSX.Element;
export type AnchorProps = InternalAnchorProps & {
    variant: Variant;
    buttonRef?: never;
    noChildWrapper?: never;
};
export declare function ButtonLink(props: AnchorProps): import("react/jsx-runtime").JSX.Element;
type CombinedPropsWithoutVariant = (InternalButtonProps & {
    variant?: never;
}) | (InternalAnchorProps & {
    type: 'link';
    variant?: never;
});
export declare const BasicButton: (props: CombinedPropsWithoutVariant & BasicVariantOnlyProps) => import("react/jsx-runtime").JSX.Element;
export declare const BasicButtonLink: (props: InternalAnchorProps & BasicVariantOnlyProps) => import("react/jsx-runtime").JSX.Element;
export declare const CriticalButton: (props: CombinedPropsWithoutVariant) => import("react/jsx-runtime").JSX.Element;
export declare const PrimaryButton: (props: CombinedPropsWithoutVariant) => import("react/jsx-runtime").JSX.Element;
export declare const SecondaryButton: (props: CombinedPropsWithoutVariant) => import("react/jsx-runtime").JSX.Element;
export declare const TertiaryButton: (props: CombinedPropsWithoutVariant) => import("react/jsx-runtime").JSX.Element;
export declare const ContrastButton: (props: CombinedPropsWithoutVariant) => import("react/jsx-runtime").JSX.Element;
export declare const LinkButton: (props: CombinedPropsWithoutVariant) => import("react/jsx-runtime").JSX.Element;
export declare const SubtleLinkButton: (props: CombinedPropsWithoutVariant) => import("react/jsx-runtime").JSX.Element;
export type CircleButtonProps = CircleButtonPropsWithChildren | CircleButtonPropsWithoutChildren;
export declare const CircleButton: (props: CircleButtonProps & {
    variant: Variant;
}) => import("react/jsx-runtime").JSX.Element;
export declare const PrimaryCircleButton: (props: CircleButtonProps) => import("react/jsx-runtime").JSX.Element;
export declare const SecondaryCircleButton: (props: CircleButtonProps) => import("react/jsx-runtime").JSX.Element;
export declare const TertiaryCircleButton: (props: CircleButtonProps) => import("react/jsx-runtime").JSX.Element;
export declare const ContrastCircleButton: (props: CircleButtonProps) => import("react/jsx-runtime").JSX.Element;
export type LegacyButtonProps = InternalButtonProps;
export type LegacyButtonLinkProps = InternalAnchorProps;
