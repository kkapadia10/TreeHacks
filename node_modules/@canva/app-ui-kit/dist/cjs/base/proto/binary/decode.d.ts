import type { WireType } from './constants';
import type { ReadBuffer } from './read_buffer';
export declare class BinaryDecoder {
    static readTag(buffer: ReadBuffer): {
        tag: number;
        wireType: WireType;
    };
    static readSplitVarint64<T>(buffer: ReadBuffer, convert: (n1: number, n2: number) => T): T;
    static readUnsignedVarint32(buffer: ReadBuffer): number;
    static readSignedVarint32(buffer: ReadBuffer): number;
    static readSignedVarint64(buffer: ReadBuffer): number;
    static readUint32(buffer: ReadBuffer): number;
    static readInt32(buffer: ReadBuffer): number;
    static readInt64(buffer: ReadBuffer): number;
    static readDouble(buffer: ReadBuffer): number;
    static readBool(buffer: ReadBuffer): boolean;
    static readEnum(buffer: ReadBuffer): number;
    static readString(buffer: ReadBuffer, length: number): string;
    private static joinInt64;
}
