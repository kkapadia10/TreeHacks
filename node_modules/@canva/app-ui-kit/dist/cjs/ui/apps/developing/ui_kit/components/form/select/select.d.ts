/** 
 * The props for an individual option in a select input.
 */
export type SelectOption<T> = {
    /** 
         * The value of the option.
         * This value must be unique within the select input.
         */
    value: T;
    /** 
         * A human readable label for the option.
         */
    label?: string;
};
/** 
 * The props for the `Select` component.
 */
export type SelectProps<T> = {
    /** 
         * The options to render within the select input.
         */
    options: SelectOption<T>[];
    /** 
         * The DOM ID for the underlying element.
         */
    id?: string;
    /** 
         * The value of the currently selected option.
         */
    value?: T;
    /** 
         * A callback that runs when the value of the input changes.
         * @param value - The selected option.
         */
    onChange?: (value: SelectOption<T>['value']) => void;
    /** 
         * If `true`, the user can't interact with the input.
         * @default false
         */
    disabled?: boolean;
    /** 
         * If `true`, the user can't interact with the input.
         * @default false
         */
    error?: boolean;
    /** 
         * A placeholder value for the input when an option isn't selected.
         */
    placeholder?: string;
    /** 
         * If `true`, the input expands to fill the width of its container.
         * If the input is a child of a `Rows` component, it automatically expands to fill the width of its container and this prop has no effect.
         */
    stretch?: boolean;
};
/** 
 * A dropdown with a selectable list of options.
 */
export declare function Select<T>(props: SelectProps<T>): JSX.Element;
