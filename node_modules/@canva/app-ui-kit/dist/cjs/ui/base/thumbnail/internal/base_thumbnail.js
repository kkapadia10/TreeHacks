"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseThumbnail = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const classnames_1 = require("classnames");
const React = require("react");
const aspect_ratio_1 = require('../../aspect_ratio/aspect_ratio');
const base_thumbnail_css_1 = require("./base_thumbnail.css");
const BaseThumbnail = ({ children, className, background = 'none', border = false, borderRadius = 'none', aspectRatio, width, height, padding, ariaLabel, }) => {
    const thumbnail = ((0, jsx_runtime_1.jsx)("div", { className: (0, classnames_1.default)(base_thumbnail_css_1.default.baseThumbnail, getWrapperClasses({ background, border, borderRadius, className, padding })), style: aspectRatio == null ? { width, height } : {}, "aria-label": ariaLabel, children: children }));
    if (aspectRatio != null) {
        return ((0, jsx_runtime_1.jsx)(aspect_ratio_1.AspectRatio, { ratio: aspectRatio, width: width, height: height, children: thumbnail }));
    }
    return thumbnail;
};
exports.BaseThumbnail = BaseThumbnail;
const getWrapperClasses = ({ background, border, borderRadius, className, padding, }) => {
    const backgroundClasses = {
        [base_thumbnail_css_1.default.secondaryBackground]: background === 'secondary',
        [base_thumbnail_css_1.default.contrastOnLight]: background === 'contrastOnLight',
        [base_thumbnail_css_1.default.contrastOnDark]: background === 'contrastOnDark',
    };
    const borderClasses = {
        [base_thumbnail_css_1.default.border]: border,
        [base_thumbnail_css_1.default.smallBorderRadius]: borderRadius === 'small',
        [base_thumbnail_css_1.default.mediumBorderRadius]: borderRadius === 'medium',
    };
    const paddingClasses = {
        [base_thumbnail_css_1.default.paddingOneUnit]: padding === '1u',
        [base_thumbnail_css_1.default.paddingTwoUnit]: padding === '2u',
    };
    return (0, classnames_1.default)(base_thumbnail_css_1.default.baseThumbnail, backgroundClasses, borderClasses, paddingClasses, className);
};
