"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlaceholderFader = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const classnames_1 = require("classnames");
const React = require("react");
const react_transition_group_1 = require("react-transition-group");
const provider_1 = require('../provider/provider');
const fader_css_1 = require("./fader.css");
const defaultDurationMs = parseInt(fader_css_1.default.defaultDurationMs, 10);
const slowDurationMs = parseInt(fader_css_1.default.slowDurationMs, 10);
const PlaceholderFader = (props) => {
    const { loading, animate: animateProp, animationMode = 'fast', Content, Placeholder, expand, expandFlex, } = props;
    const enableAnimations = (0, provider_1.useEnableAnimations)();
    const animate = animateProp !== null && animateProp !== void 0 ? animateProp : enableAnimations;
    const contentRef = React.useRef(null);
    const placeholderRef = React.useRef(null);
    const isAnimationModeSlow = animationMode === 'slow';
    const expandClassName = (0, classnames_1.default)({
        [fader_css_1.default.expand]: expand,
        [fader_css_1.default.expandFlex]: !expand && expandFlex,
    });
    const animationModeClassName = animate
        ? (0, classnames_1.default)({
            [fader_css_1.default.slow]: isAnimationModeSlow,
        })
        : null;
    const renderContent = (ref) => ((0, jsx_runtime_1.jsx)("div", { ref: ref, className: expandClassName, children: loading ? (0, jsx_runtime_1.jsx)(Placeholder, {}) : (0, jsx_runtime_1.jsx)(Content, {}) }));
    const { enter, enterActive, exit, exitActive, container } = fader_css_1.default;
    const durationMs = isAnimationModeSlow ? slowDurationMs : defaultDurationMs;
    const ref = loading ? placeholderRef : contentRef;
    return ((0, jsx_runtime_1.jsx)("div", { className: (0, classnames_1.default)(container, expandClassName, animationModeClassName), children: animate
            ? ((0, jsx_runtime_1.jsx)(react_transition_group_1.TransitionGroup, { component: null, children: (0, jsx_runtime_1.jsx)(react_transition_group_1.CSSTransition, { timeout: durationMs, classNames: { enter, enterActive, exit, exitActive }, mountOnEnter: true, unmountOnExit: true, nodeRef: ref, children: renderContent(ref) }, loading ? 'placeholder' : 'component') }))
            : renderContent(ref) }));
};
exports.PlaceholderFader = PlaceholderFader;
