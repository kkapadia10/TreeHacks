import type { Argument as ClassNameArgument } from 'classnames';
import * as React from 'react';
import type { Space } from '../metrics/metrics';
import type { ResponsiveValue } from '../responsive/responsive';
import type { AlignItems, Background, Border, BorderRadius, Display, FlexDirection, FlexWrap, JustifyContent, MinSize, Size } from './internal/atoms/atoms';
import type { CommonProps } from './types';
export type BoxProps = {
    display?: ResponsiveValue<Display>
    background?: Background
    border?: Border
    borderTop?: Border
    borderBottom?: Border
    borderStart?: Border
    borderEnd?: Border
    borderRadius?: BorderRadius
    padding?: ResponsiveValue<Space>
    paddingX?: ResponsiveValue<Space>
    paddingY?: ResponsiveValue<Space>
    paddingTop?: ResponsiveValue<Space>
    paddingBottom?: ResponsiveValue<Space>
    paddingStart?: ResponsiveValue<Space>
    paddingEnd?: ResponsiveValue<Space>
    width?: Size
    height?: Size
    minWidth?: MinSize
    minHeight?: MinSize
    flexDirection?: ResponsiveValue<FlexDirection>
    flexWrap?: FlexWrap
    justifyContent?: JustifyContent
    alignItems?: AlignItems
    children?: React.ReactNode
    className?: ClassNameArgument
    ref?: HTMLElement;
} & CommonProps;
export declare const Box: React.ForwardRefExoticComponent<Omit<BoxProps, "ref"> & React.RefAttributes<HTMLElement>>;
