"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeletableSwatch = exports.ClickableSwatch = exports.StaticSwatch = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const classnames_1 = require("classnames");
const mobx_react_1 = require("mobx-react");
const React = require("react");
const pointer_input_state_1 = require('../../a11y/pointer_input_state/pointer_input_state');
const badge_container_1 = require('../../badge/badge_container/badge_container');
const button_1 = require('../../button/button');
const icon_1 = require('../../icons/close/icon');
const swatch_css_1 = require("../swatch.css");
const swatch_messages_1 = require("../swatch.messages");
const StaticSwatch = ({ className, children, ariaLabel, ariaDescribedBy, ariaLabelledBy, id, }) => {
    return ((0, jsx_runtime_1.jsx)("span", { "aria-label": ariaLabelledBy ? undefined : ariaLabel, "aria-labelledby": ariaLabelledBy, "aria-describedby": ariaDescribedBy, id: id, className: className, role: "img", children: children }));
};
exports.StaticSwatch = StaticSwatch;
exports.ClickableSwatch = (0, mobx_react_1.observer)(function ClickableSwatch({ onClick, active, disabled, ariaLabel, disclosure, role, focusRef, tabIndex, stretch, aspectRatio, children, ariaHasPopup, ariaControls, tooltipLabel, disableTooltip, tooltipOverflowBoundariesElement, }) {
    return ((0, jsx_runtime_1.jsx)(
     button_1.BasicButton,
     { onClick: onClick, active: active, disclosure: disclosure, disabled: disabled, role: role, focusRef: focusRef, tabIndex: tabIndex, ariaLabel: ariaLabel, noChildWrapper: true, ariaHasPopup: ariaHasPopup, ariaControls: ariaControls, tooltipLabel: tooltipLabel, tooltipDisabled: disableTooltip, tooltipOverflowBoundariesElement: tooltipOverflowBoundariesElement, className: (0, classnames_1.default)(swatch_css_1.default.swatchButton, {
             [swatch_css_1.default.active]: active,
             [swatch_css_1.default.disabled]: disabled,
             [swatch_css_1.default.stretch]: stretch,
             [swatch_css_1.default.aspectRatio]: aspectRatio,
             [swatch_css_1.default.fixed]: !stretch,
             [swatch_css_1.default.hoverSupported]: pointer_input_state_1.pointerInputState.isMouseInput,
         }), children: children }
    ));
});
exports.DeletableSwatch = (0, mobx_react_1.observer)(function DeletableSwatch({ onDelete, deleteButtonVisibility, stretch, aspectRatio, disableTooltip, tooltipOverflowBoundariesElement, children, }) {
    return ((0, jsx_runtime_1.jsxs)(badge_container_1.BadgeContainer, { className: (0, classnames_1.default)(swatch_css_1.default.swatchWrapper, {
            [swatch_css_1.default.stretch]: stretch,
            [swatch_css_1.default.fixed]: !stretch,
            [swatch_css_1.default.aspectRatio]: aspectRatio,
        }), children: [children, (0, jsx_runtime_1.jsx)(badge_container_1.BadgeGroup, { location: "top-end", visibility: !pointer_input_state_1.pointerInputState.isMouseInput ? 'always' : deleteButtonVisibility, children: (0, jsx_runtime_1.jsx)(button_1.CircleButton, { icon: icon_1.CloseIcon, variant: "contrast", onClick: onDelete, tooltipLabel: swatch_messages_1.SwatchMessages.deleteTooltip(), tooltipDisabled: disableTooltip, tooltipOverflowBoundariesElement: tooltipOverflowBoundariesElement, size: "tiny", iconSize: "tiny", className: swatch_css_1.default.deleteButton }) })] }));
});
