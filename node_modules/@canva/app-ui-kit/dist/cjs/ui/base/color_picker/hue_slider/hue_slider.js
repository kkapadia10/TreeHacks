"use strict";

const makeObservable = require('../../../../base/make_observable/make_observable').makeObservable;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HueSlider = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const classnames_1 = require("classnames");
const mobx = require("mobx");
const mobxReact = require("mobx-react");
const React = require("react");
const base_slider_1 = require('../../form/slider/base_slider');
const hue_slider_css_1 = require("./hue_slider.css");
const Track = () => (0, jsx_runtime_1.jsx)("div", {
  className: hue_slider_css_1.default.track
});
const Knob = ({
  focused,
  hovering
}) => (0, jsx_runtime_1.jsx)("div", {
  className: (0, classnames_1.default)(hue_slider_css_1.default.knob, {
    [hue_slider_css_1.default.knobHoverOrFocus]: focused || hovering
  })
});
let HueSlider = class HueSlider extends React.Component {
  static _makeObservable(instance) {
    makeObservable(instance, {
      knobAtEnd: mobx.observable.ref,
      knobPosition: mobx.computed,
      onHueChange: mobx.action
    });
  }
  constructor() {
    super(...arguments);
    HueSlider._makeObservable(this);
    this.knobAtEnd = false;
    this.onHueChange = hue => {
      this.knobAtEnd = hue === 1;
      this.props.onChange(hue);
    };
  }
  render() {
    return (0, jsx_runtime_1.jsx)("div", {
      className: hue_slider_css_1.default.container,
      children: (0, jsx_runtime_1.jsx)("div", {
        className: hue_slider_css_1.default.widener,
        children: (0, jsx_runtime_1.jsx)(base_slider_1.BaseSlider, {
          value: this.knobPosition,
          min: 0,
          max: 1,
          step: 0.005,
          onChange: this.onHueChange,
          onDragStart: this.props.onDragStart,
          onDragEnd: this.props.onDragEnd,
          ariaLabel: this.props.ariaLabel,
          Knob: Knob,
          Track: Track
        })
      })
    });
  }
  get knobPosition() {
    return this.knobAtEnd && this.props.hue === 0 ? 1 : this.props.hue;
  }
};
exports.HueSlider = HueSlider;
exports.HueSlider = HueSlider = tslib_1.__decorate([mobxReact.observer], HueSlider);