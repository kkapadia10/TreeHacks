"use strict";

const makeObservable = require('../../../../base/make_observable/make_observable').makeObservable;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlphaSlider = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const classnames_1 = require("classnames");
const mobx = require("mobx");
const mobxReact = require("mobx-react");
const React = require("react");
const base_slider_1 = require('../../form/slider/base_slider');
const alpha_slider_css_1 = require("./alpha_slider.css");
const Knob = ({
  focused,
  hovering
}) => (0, jsx_runtime_1.jsx)("div", {
  className: (0, classnames_1.default)(alpha_slider_css_1.default.knob, {
    [alpha_slider_css_1.default.knobHoverOrFocus]: focused || hovering
  })
});
let AlphaSlider = class AlphaSlider extends React.Component {
  static _makeObservable(instance) {
    makeObservable(instance, {
      onAlphaChange: mobx.action
    });
  }
  constructor() {
    super(...arguments);
    AlphaSlider._makeObservable(this);
    this.onAlphaChange = alpha => {
      this.props.onChange(alpha);
    };
  }
  render() {
    return (0, jsx_runtime_1.jsx)("div", {
      className: alpha_slider_css_1.default.container,
      children: (0, jsx_runtime_1.jsx)("div", {
        className: alpha_slider_css_1.default.widener,
        children: (0, jsx_runtime_1.jsx)(base_slider_1.BaseSlider, {
          value: this.props.alpha,
          min: 0,
          max: 1,
          step: 0.005,
          onChange: this.onAlphaChange,
          onDragStart: this.props.onDragStart,
          onDragEnd: this.props.onDragEnd,
          ariaLabel: this.props.ariaLabel,
          Knob: Knob,
          Track: this.Track
        })
      })
    });
  }
  get Track() {
    return () => (0, jsx_runtime_1.jsx)("div", {
      className: alpha_slider_css_1.default.track,
      children: (0, jsx_runtime_1.jsx)("div", {
        className: alpha_slider_css_1.default.overlay,
        style: {
          background: `linear-gradient(to right, transparent, ${this.props.color})`
        }
      })
    });
  }
};
exports.AlphaSlider = AlphaSlider;
exports.AlphaSlider = AlphaSlider = tslib_1.__decorate([mobxReact.observer], AlphaSlider);