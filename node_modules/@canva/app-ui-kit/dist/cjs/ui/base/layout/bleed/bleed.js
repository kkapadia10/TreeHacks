"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bleed = void 0;
const classnames_1 = require("classnames");
const React = require("react");
const types_1 = require('../../box/types');
const metrics_1 = require('../../metrics/metrics');
const responsive_1 = require('../../responsive/responsive');
const bleed_css_1 = require("./bleed.css");
exports.Bleed = React.forwardRef(function Bleed(props, ref) {
    const { all, x, y, top, bottom, start, end, tagName = 'div', children, ...rest } = props;
    const preventMarginCollapse = all || y || top || bottom;
    const Content = React.createElement(tagName, {
        className: (0, classnames_1.default)(bleed_css_1.default.hasBleed, { [bleed_css_1.default.block]: tagName === 'span' }),
        style: {
            ...(all && (0, responsive_1.generateStyle)(allPropertyMap, all, metrics_1.getSpaceValue)),
            ...(x && (0, responsive_1.generateStyle)(xPropertyMap, x, metrics_1.getSpaceValue)),
            ...(y && (0, responsive_1.generateStyle)(yPropertyMap, y, metrics_1.getSpaceValue)),
            ...(top && (0, responsive_1.generateStyle)(topPropertyMap, top, metrics_1.getSpaceValue)),
            ...(bottom && (0, responsive_1.generateStyle)(bottomPropertyMap, bottom, metrics_1.getSpaceValue)),
            ...(start && (0, responsive_1.generateStyle)(startPropertyMap, start, metrics_1.getSpaceValue)),
            ...(end && (0, responsive_1.generateStyle)(endPropertyMap, end, metrics_1.getSpaceValue)),
        },
        ...(0, types_1.commonPropsToDOMProps)(rest),
        ref: preventMarginCollapse ? undefined : ref,
    }, children);
    return preventMarginCollapse
        ? React.createElement(tagName, { className: bleed_css_1.default.noCollapse, ref }, Content)
        : Content;
});
const allPropertyMap = {
    default: bleed_css_1.customProperties.bleed,
    smallUp: bleed_css_1.customProperties.smallUpBleed,
    mediumUp: bleed_css_1.customProperties.mediumUpBleed,
    largeUp: bleed_css_1.customProperties.largeUpBleed,
};
const xPropertyMap = {
    default: bleed_css_1.customProperties.bleedX,
    smallUp: bleed_css_1.customProperties.smallUpBleedX,
    mediumUp: bleed_css_1.customProperties.mediumUpBleedX,
    largeUp: bleed_css_1.customProperties.largeUpBleedX,
};
const yPropertyMap = {
    default: bleed_css_1.customProperties.bleedY,
    smallUp: bleed_css_1.customProperties.smallUpBleedY,
    mediumUp: bleed_css_1.customProperties.mediumUpBleedY,
    largeUp: bleed_css_1.customProperties.largeUpBleedY,
};
const topPropertyMap = {
    default: bleed_css_1.customProperties.bleedTop,
    smallUp: bleed_css_1.customProperties.smallUpBleedTop,
    mediumUp: bleed_css_1.customProperties.mediumUpBleedTop,
    largeUp: bleed_css_1.customProperties.largeUpBleedTop,
};
const bottomPropertyMap = {
    default: bleed_css_1.customProperties.bleedBottom,
    smallUp: bleed_css_1.customProperties.smallUpBleedBottom,
    mediumUp: bleed_css_1.customProperties.mediumUpBleedBottom,
    largeUp: bleed_css_1.customProperties.largeUpBleedBottom,
};
const startPropertyMap = {
    default: bleed_css_1.customProperties.bleedStart,
    smallUp: bleed_css_1.customProperties.smallUpBleedStart,
    mediumUp: bleed_css_1.customProperties.mediumUpBleedStart,
    largeUp: bleed_css_1.customProperties.largeUpBleedStart,
};
const endPropertyMap = {
    default: bleed_css_1.customProperties.bleedEnd,
    smallUp: bleed_css_1.customProperties.smallUpBleedEnd,
    mediumUp: bleed_css_1.customProperties.mediumUpBleedEnd,
    largeUp: bleed_css_1.customProperties.largeUpBleedEnd,
};
