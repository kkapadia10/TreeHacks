import * as React from 'react';
import type { ContentContainerProps } from '../internal/content_container';
import type { Offset, Placement, ReferenceObject, Width as PopoverWidth, WidthMode } from '../popover/popover';
export type FlyoutProps = {
    id?: string
    open: boolean
    onRequestClose?: () => void
    onCloseComplete?: () => void
    placement?: Placement
    offset?: Offset
    width?: Width
    dangerouslySetWidthMode?: WidthMode
    trigger: React.ReactNode | ((props: TriggerProps) => React.ReactNode) | ReferenceObject
    header?: Content
    footer?: Content
    handleSafeAreaInsetBottom?: boolean
    children?: Content
} & ContentContainerProps;
export type { Offset, Placement, WidthMode };
export type Width = 'trigger' | TypesafeExtract<PopoverWidth, '16u' | '32u' | '40u' | '45u' | '52u'>;
type TypesafeExtract<T, U extends T> = Extract<T, U>;
export type TriggerProps = {
    ariaHasPopup?: FlyoutProps['role']
    ariaControls?: string
    disclosure?: true
    active?: boolean
};
export type Content = React.ReactNode | ((props: FlyoutContentProps) => React.ReactNode);
export type FlyoutContentProps = {
    mode: Mode
};
export type Mode = 'sheet' | 'popover';
export declare function Flyout(
 { open, onRequestClose, onCloseComplete, trigger, width, dangerouslySetWidthMode, header, footer, children, ...contentContainerProps }: FlyoutProps
): import("react/jsx-runtime").JSX.Element;
