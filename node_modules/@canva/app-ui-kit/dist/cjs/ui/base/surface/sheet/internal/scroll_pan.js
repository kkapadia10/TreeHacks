"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useScrollPan = void 0;
const React = require("react");
const stable_function_1 = require('../../../stable_function/stable_function');
const snap_points_1 = require("./snap_points");
function useScrollPan({ resizeControls, snapPointControls, snapPointIndex, maxPanIndex, isContentScrolled, }) {
    const pan = React.useRef(0);
    const update = (0, stable_function_1.useStableFunction)((delta) => {
        const points = snapPointControls.get();
        const heights = points.map(point => point.height);
        const current = (0, snap_points_1.pointForIndex)(points, snapPointIndex).height;
        const maxPan = maxPanIndex != null
            ? Math.max((0, snap_points_1.pointForIndex)(points, maxPanIndex).height, current)
            : Math.max(...heights);
        if (maxPan === current && isContentScrolled()) {
            return true;
        }
        pan.current += delta;
        const nextSize = Math.min(maxPan, current + pan.current);
        pan.current = nextSize - current;
        resizeControls.update(pan.current);
        return nextSize >= maxPan;
    });
    const end = (0, stable_function_1.useStableFunction)(() => {
        resizeControls.end();
        pan.current = 0;
    });
    return {
        panControls: {
            start: resizeControls.start,
            update,
            end,
        },
    };
}
exports.useScrollPan = useScrollPan;
