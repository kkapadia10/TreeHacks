"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useContentScrollable = void 0;
const compose_react_refs_1 = require("@seznam/compose-react-refs");
const React = require("react");
function useContentChange(setHasScroll) {
    const element = React.useRef(null);
    const [observer] = React.useState(() => new MutationObserver(() => {
        const hasContentScroll = element.current != null && element.current.scrollHeight > element.current.clientHeight;
        setHasScroll(hasContentScroll);
    }));
    const ref = React.useCallback((el) => {
        element.current = el;
        if (el == null) {
            observer.disconnect();
            return;
        }
        observer.observe(el, { childList: true, subtree: true });
    }, [observer]);
    return { ref };
}
function useContentScrollable() {
    const scrollRef = React.useRef(null);
    const [hasScroll, setHasScroll] = React.useState(false);
    const { ref: contentChangeRef } = useContentChange(setHasScroll);
    React.useLayoutEffect(() => {
        var _a, _b;
        const hasContentScroll = scrollRef.current != null
            && ((_a = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current) === null || _a === void 0 ? void 0 : _a.scrollHeight) > ((_b = scrollRef.current) === null || _b === void 0 ? void 0 : _b.clientHeight);
        setHasScroll(hasContentScroll);
    });
    return { hasScroll, contentScrollRef: (0, compose_react_refs_1.default)(scrollRef, contentChangeRef) };
}
exports.useContentScrollable = useContentScrollable;
