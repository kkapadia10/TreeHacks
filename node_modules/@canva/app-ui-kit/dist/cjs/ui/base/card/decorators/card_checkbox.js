"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardCheckbox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const mobx_react_1 = require("mobx-react");
const React = require("react");
const badge_1 = require('../../badge/badge');
const badge_container_1 = require('../../badge/badge_container/badge_container');
const checkbox_1 = require('../../form/checkbox/checkbox');
const card_context_1 = require("../internal/card_context");
const card_badge_group_1 = require("./card_badge_group");
exports.CardCheckbox = (0, mobx_react_1.observer)(function CardCheckbox(props) {
    const { onSelect, selected, status, label, forceShow } = props;
    const configuration = (0, card_context_1.useCardConfiguration)();
    const showCheckbox = selected || forceShow;
    const disabled = props.disabled || configuration.disabled;
    const checkbox = ((0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { size: "medium", onChange: onSelect, checked: selected, disabled: disabled, ariaLabel: label }));
    return status && !showCheckbox
        ? ((0, jsx_runtime_1.jsx)(card_badge_group_1.CardBadgeGroup, { location: "top-start", visibility: "always", children: (0, jsx_runtime_1.jsx)(badge_container_1.SwapOnHover, { onHover: checkbox, children: status && (0, jsx_runtime_1.jsx)(badge_1.Badge, { tone: "contrast", text: status }) }) }))
        : ((0, jsx_runtime_1.jsx)(card_badge_group_1.CardBadgeGroup, { location: "top-start", forceShow: showCheckbox, children: checkbox }));
});
