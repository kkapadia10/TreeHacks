import * as React from 'react';
import type { Location } from '../../badge/badge_container/badge_container';
import type { Icon } from '../../icons/icons';
import type { FlyoutProps } from '../../surface/flyout/flyout';
import type { CardSize } from '../card';
type Child = React.ReactElement<CardMenuButtonProps> | undefined | false | null;
type CardButtonGroupProps = {
    children?: Child | Child[]
    disabled?: boolean
    forceShow?: boolean
    size?: CardSize
    transition?: 'fade' | 'slide'
    location?: Extract<Location, 'top-end' | 'center-end'>;
};
export declare const CardButtonGroup: (props: CardButtonGroupProps) => import("react/jsx-runtime").JSX.Element;
type CardButtonProps = {
    icon: Icon<'small' | 'medium'>
    ariaLabel: string
    onClick: () => void
    className?: string
    disabled?: boolean
    size?: CardSize;
};
export declare const CardButton: React.NamedExoticComponent<CardButtonProps>;
type CardMenuButtonProps = {
    icon?: Icon<'small' | 'medium'>
    ariaLabel?: string
    className?: string
    disabled?: boolean
    size?: CardSize;
    Flyout?: React.ComponentType<FlyoutProps>
    FlyoutContent: React.ComponentType
};
export declare const CardMenuButton: (props: CardMenuButtonProps) => import("react/jsx-runtime").JSX.Element;
type StatelessCardMenuButtonProps = CardMenuButtonProps & {
    isOpen: boolean;
    toggleFlyout: () => void;
};
export declare const StatelessCardMenuButton: (props: StatelessCardMenuButtonProps) => import("react/jsx-runtime").JSX.Element;
export {};
