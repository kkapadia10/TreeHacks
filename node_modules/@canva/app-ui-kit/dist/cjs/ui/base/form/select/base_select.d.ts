import type { TouchOrMouseEvent } from '../../button/button';
import { BaseSelectPresenter, BaseSelectStore } from './base_select_presenter';
import type { SelectOption } from './base_select_util';
import type { StatelessBaseSelectProps } from './stateless_base_select';
export type BaseSelectProps<T> = Omit<StatelessBaseSelectProps<T>, 'activeIndex' | 'activeOption' | 'onRequestToggle' | 'onItemClick' | 'onItemHover' | 'focusOnMenu'> & {
    store?: BaseSelectStore<T>
    presenter?: BaseSelectPresenter<T>
    onOpen?(): void
    onClose?(): void
    onChange?(value: BaseSelectProps<T>['value'], option?: SelectOption<T>): void
    onSelection?(option: SelectOption<T>, event?: TouchOrMouseEvent<any> | KeyboardEvent): void
    closeOnSelection?: boolean
    searchable?: boolean | {
        filterFn?(query: string, options: SelectOption<T>[]): SelectOption<T>[];
        onInputChange?(query: string): void;
        inputPlaceholder?: string
    }
};
export declare const BaseSelect: <T>(props: BaseSelectProps<T>) => import("react/jsx-runtime").JSX.Element;
