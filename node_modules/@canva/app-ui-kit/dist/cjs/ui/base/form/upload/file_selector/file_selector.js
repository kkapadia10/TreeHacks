"use strict";

const makeObservable = require('../../../../../base/make_observable/make_observable').makeObservable;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WithFileSelector = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const compose_react_refs_1 = require("@seznam/compose-react-refs");
const preconditions_1 = require('../../../../../base/preconditions');
const mobx_1 = require("mobx");
const mobx_react_1 = require("mobx-react");
const React = require("react");
const id_generator_1 = require('../../../dom/id_generator/id_generator');
const file_selector_css_1 = require("./file_selector.css");
let WithFileSelector = class WithFileSelector extends React.Component {
  static _makeObservable(instance) {
    makeObservable(instance, {
      fileInputKey: mobx_1.observable.ref,
      onFileInput: mobx_1.action
    });
  }
  constructor() {
    super(...arguments);
    WithFileSelector._makeObservable(this);
    this.inputRef = React.createRef();
    this.separator =
    typeof navigator !== 'undefined' && /(Android.*MicroMessenger)/i.test(navigator.userAgent) ? ';' : ',';
    this.fileInputKey = id_generator_1.domIdGenerator.next();
    this.onFileInput = event => {
      const {
        onSelectFiles
      } = this.props;
      const files = event.target.files;
      if (files) {
        onSelectFiles === null || onSelectFiles === void 0 ? void 0 : onSelectFiles(Array.from(files));
      }
      this.fileInputKey = id_generator_1.domIdGenerator.next();
    };
    this.openFileSelection = () => {
      preconditions_1.Preconditions.checkExists(this.inputRef.current).click();
    };
  }
  render() {
    const {
      children,
      mimeTypes,
      multiple,
      disabled
    } = this.props;
    const accept = mimeTypes != null && mimeTypes.length > 0 ? mimeTypes.join(this.separator) : undefined;
    return (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, {
      children: [(0, jsx_runtime_1.jsx)("input", {
        ref: (0, compose_react_refs_1.default)(this.inputRef, this.props.inputRef),
        type: "file",
        className: file_selector_css_1.default.input,
        tabIndex: -1,
        "aria-hidden": "true",
        multiple: multiple,
        accept: accept,
        onChange: this.onFileInput,
        disabled: disabled
      }, this.fileInputKey), children({
        onClick: this.openFileSelection
      })]
    });
  }
};
exports.WithFileSelector = WithFileSelector;
exports.WithFileSelector = WithFileSelector = tslib_1.__decorate([mobx_react_1.observer], WithFileSelector);