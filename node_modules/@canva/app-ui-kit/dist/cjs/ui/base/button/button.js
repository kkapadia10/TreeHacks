"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContrastCircleButton = exports.TertiaryCircleButton = exports.SecondaryCircleButton = exports.PrimaryCircleButton = exports.CircleButton = exports.SubtleLinkButton = exports.LinkButton = exports.ContrastButton = exports.TertiaryButton = exports.SecondaryButton = exports.PrimaryButton = exports.CriticalButton = exports.BasicButtonLink = exports.BasicButton = exports.ButtonLink = exports.Button = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = require("react");
const internal_button_1 = require("./internal/internal_button");
function Button(props) {
    return (0, internal_button_1.renderButton)(props);
}
exports.Button = Button;
function ButtonLink(props) {
    return (0, internal_button_1.renderAnchor)(props);
}
exports.ButtonLink = ButtonLink;
const BasicButton = (props) => (0, internal_button_1.renderButtonOrAnchor)({ ...props, variant: 'basic' });
exports.BasicButton = BasicButton;
const BasicButtonLink = (props) => (0, internal_button_1.renderAnchor)({ ...props, variant: 'basic' });
exports.BasicButtonLink = BasicButtonLink;
const CriticalButton = (props) => (0, internal_button_1.renderButtonOrAnchor)({ ...props, variant: 'critical' });
exports.CriticalButton = CriticalButton;
const PrimaryButton = (props) => (0, internal_button_1.renderButtonOrAnchor)({ ...props, variant: 'primary' });
exports.PrimaryButton = PrimaryButton;
const SecondaryButton = (props) => (0, internal_button_1.renderButtonOrAnchor)({ ...props, variant: 'secondary' });
exports.SecondaryButton = SecondaryButton;
const TertiaryButton = (props) => (0, internal_button_1.renderButtonOrAnchor)({ ...props, variant: 'tertiary' });
exports.TertiaryButton = TertiaryButton;
const ContrastButton = (props) => (0, internal_button_1.renderButtonOrAnchor)({ ...props, variant: 'contrast' });
exports.ContrastButton = ContrastButton;
const LinkButton = (props) => (0, internal_button_1.renderButtonOrAnchor)({ ...props, variant: 'linkButton' });
exports.LinkButton = LinkButton;
const SubtleLinkButton = (props) => (0, internal_button_1.renderButtonOrAnchor)({ ...props, variant: 'subtleLinkButton' });
exports.SubtleLinkButton = SubtleLinkButton;
function isCircleButtonWithChildren(props) {
    return typeof props.children !== 'undefined';
}
const CircleButton = (props) => {
    if (isCircleButtonWithChildren(props)) {
        return (0, jsx_runtime_1.jsx)(internal_button_1.CircleButtonWithLabel, { ...props });
    }
    return ((0, jsx_runtime_1.jsx)(internal_button_1.CircleButtonWithoutLabel, { ...props }));
};
exports.CircleButton = CircleButton;
const PrimaryCircleButton = (props) => ((0, jsx_runtime_1.jsx)(exports.CircleButton, { ...props, variant: "primary" }));
exports.PrimaryCircleButton = PrimaryCircleButton;
const SecondaryCircleButton = (props) => ((0, jsx_runtime_1.jsx)(exports.CircleButton, { ...props, variant: "secondary" }));
exports.SecondaryCircleButton = SecondaryCircleButton;
const TertiaryCircleButton = (props) => ((0, jsx_runtime_1.jsx)(exports.CircleButton, { ...props, variant: "tertiary" }));
exports.TertiaryCircleButton = TertiaryCircleButton;
const ContrastCircleButton = (props) => ((0, jsx_runtime_1.jsx)(exports.CircleButton, { ...props, variant: "contrast" }));
exports.ContrastCircleButton = ContrastCircleButton;
